name: Block Domains Action

on:
  push:
    branches:
      - main

jobs:
  block_domains_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Download blocked domains list
        run: |
          curl -o blocked_domains.txt https://example.com/blocked_domains.txt
      
      - name: Split domains into files
        run: |
          mkdir domains
          split -l 1000 blocked_domains.txt domains/list_
      
      - name: Get Cloudflare API Token
        id: get_api_token
        run: echo "::set-output name=api_token::${{ secrets.CF_API_KEY }}"
      
      - name: Get Cloudflare Account ID
        id: get_account_id
        run: echo "::set-output name=account_id::${{ secrets.CF_API_ACCOUNT_ID }}"
        
      - name: Upload domain lists to Cloudflare Gateway
        run: |
          for file in $(ls domains); do \
            curl -X POST "https://api.cloudflare.com/client/v4/accounts/${{ steps.get_account_id.outputs.account_id }}/gateway/lists" \
            -H "Authorization: Bearer ${{ steps.get_api_token.outputs.api_token }}" \
            -H "X-Auth-Email: ${{ secrets.CF_API_EMAIL }}" \
            -H "Content-Type: application/json" \
            --data "{\"name\":\"$file\",\"description\":\"Blocked domains list\",\"domains\":$(cat domains/$file)}"; \
          done
        
      - name: Create Firewall DNS Policy to block all domains
        run: |
          policy_json=$(echo "{\"name\":\"Block all domains policy\",\"rules\":[")
          for file in $(ls domains); do \
            policy_json+=$(echo "{\"action\":\"block\",\"filter\":{\"expression\":\"(cf.client.bot.score lt 10) and (http.host in '${file}')\"}},"); \
          done
          policy_json=$(echo "${policy_json::-1}]}" | tr '\n' ' ')
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${{ steps.get_account_id.outputs.account_id }}/gateway/rules" \
          -H "Authorization: Bearer ${{ steps.get_api_token.outputs.api_token }}" \
          -H "X-Auth-Email: ${{ secrets.CF_API_EMAIL }}" \
          -H "Content-Type: application/json" \
          --data "$policy_json"
